{
  "name": "AWS Lambda",
  "tagline": "",
  "body": "AWS Meetup - Magic Night\r\n==========================\r\n\r\nDescription\r\n------------\r\nCreate a lambda function that is triggered every time an image is `put` into an Amazon S3 bucket. The lambda function will perform the following actions:\r\n\r\n1. Download the image\r\n2. Extract image metadata\r\n3. Resize image (optional)\r\n4. Submit image and/or metadata to Twitter using the Twitter API\r\n5. Submit the image to a third party service of your choice (optional)\r\n6. Be creative\r\n\r\nCreate a lambda function\r\n------------------------\r\n- **Download [sample code](https://s3.amazonaws.com/sd-lambda/awslambda.zip)**\r\n\r\n- Create an S3 bucket and name it `your-name-lambda`\r\n\r\n![image1](images/img1.png) ![image2](images/img2.png)\r\n\r\n- Open the lambda function section and create a new lambda function\r\n- Select the `s3-get-object-python` blueprint\r\n\r\n![image3](images/img3.png)\r\n\r\n- Set the event source type to S3\r\n- Select the bucket you just created\r\n- Click next\r\n\r\n![image4](images/img4.png)\r\n\r\n- Select a name for your function\r\n- Choose your favorite runtime (we recommend Python)\r\n- Select `Upload a .ZIP file` and upload the starter code `lambda_function.zip`\r\n- Set the Role to `lambda_s3_exec_role`\r\n- Click next\r\n\r\n![image5](images/img5.png)\r\n\r\n- Select `Actions` > `Configure test event` and paste the `payload.json` in the text box\r\n\r\n![image6](images/img6.png) \r\n\r\n- `Save and test`\r\n- In the `Log output` you should see an output like this\r\n\r\n![image7](images/img7.png) \r\n\r\n###You are ready to hack!\r\n \r\nResources\r\n==========\r\n1. [Boto3](http://boto3.readthedocs.org/en/latest/reference/services/s3.html) (AWS SDK for python)\r\n2. [Twitter Libraries](https://dev.twitter.com/overview/api/twitter-libraries) (I found [tweepy](https://github.com/tweepy/tweepy) easy to use)\r\n3. [AWS Lambda Documentation](http://docs.aws.amazon.com/lambda/latest/dg/welcome.html)\r\n\r\n\r\nCode\r\n------------\r\n###  Starter code\r\n```python\r\n# lambda_fuction.py\r\nimport boto3\r\nimport json\r\n\r\n\r\n# get API keys\r\nCONSUMER_KEY = 'ev5julua2uB4unSAkeSadKCtH' \r\nCONSUMER_SECRET = 'ni3SpgyP0zoCrixZVcmREbyyKccCyZCxMm7htyTz5A6maOhNeT' \r\nACCESS_TOKEN = '717226425745612800-tjrpLJw4eROE6lv1KzkZW9EtvRBHcnl'\r\nACCESS_TOKEN_SECRET = '8hVt1kQpiTMOPmpa6GzPmpdxUnK1aM0l4liBGXsxFNjqb'\r\n\r\n\r\ndef lambda_handler(event, context):\r\n    //print('Received event: ' + json.dumps(event, indent=2))\r\n    s3_info = event['Records'][0]['s3']\r\n    bucket = s3_info['bucket']['name']\r\n    image_name = s3_info['object']['key']\r\n    print(bucket)\r\n    print(image_name)\r\n\r\n    # Download image from S3 (Basic)\r\n\r\n    # Extract metadata (Intermediate)\r\n\r\n    # Resize image (Intermediate)\r\n\r\n    # Submit image or metadata to Twitter (Basic)\r\n\r\n    # Submit image to third party services (Advanced)\r\n```\r\n\r\n### Test payload\r\n\r\n```json\r\n{\r\n  \"Records\": [\r\n    {\r\n      \"eventVersion\": \"2.0\",\r\n      \"eventTime\": \"1970-01-01T00:00:00.000Z\",\r\n      \"requestParameters\": {\r\n        \"sourceIPAddress\": \"127.0.0.1\"\r\n      },\r\n      \"s3\": {\r\n        \"configurationId\": \"testConfigRule\",\r\n        \"object\": {\r\n          \"eTag\": \"0123456789abcdef0123456789abcdef\",\r\n          \"sequencer\": \"0A1B2C3D4E5F678901\",\r\n          \"key\": \"stormtrooper.jpg\",\r\n          \"size\": 1024\r\n        },\r\n        \"bucket\": {\r\n          \"arn\": \"arn:aws:s3:::sample-test\",\r\n          \"name\": \"sample-test\",\r\n          \"ownerIdentity\": {\r\n            \"principalId\": \"EXAMPLE\"\r\n          }\r\n        },\r\n        \"s3SchemaVersion\": \"1.0\"\r\n      },\r\n      \"responseElements\": {\r\n        \"x-amz-id-2\": \"EXAMPLE123/5678abcdefghijklambdaisawesome/mnopqrstuvwxyzABCDEFGH\",\r\n        \"x-amz-request-id\": \"EXAMPLE123456789\"\r\n      },\r\n      \"awsRegion\": \"us-east-1\",\r\n      \"eventName\": \"ObjectCreated:Put\",\r\n      \"userIdentity\": {\r\n        \"principalId\": \"EXAMPLE\"\r\n      },\r\n      \"eventSource\": \"aws:s3\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nTest Image\r\n----------\r\n![test image](img/image-46.jpg)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}